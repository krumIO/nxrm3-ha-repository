# Declare variables to be passed into your templates.
namespaces:
  # allow user to create namespace ahead of time and/or reuse existing namespaces
  create: false
  nexusNs: nexusrepo
statefulset:
  clusterRegion: us-east-1
  name: nxrm-statefulset
  clusterName: nxrm-nexus
  initContainer:
    image:
      repository: busybox
      tag: 1.33.1
    resources:
      limits:
        cpu: "0.2"
        memory: "512Mi"
      requests:
        cpu: "0.1"
        memory: "256Mi"
  container:
    image:
      repository: sonatype/nexus3
      tag: 3.50.0
    resources:
      # See help documentation, these are minimum system requirements
      requests:
        cpu: 4
        memory: "8Gi"
      limits:
        cpu: 4
        memory: "8Gi"
    containerPort: 8081
    pullPolicy: IfNotPresent
    env:
      nexusDBName: nexus
      nexusDBPort: 3306
      install4jAddVmParams: "-Xms2703m -Xmx2703m"
  requestLogContainer:
    image:
      repository: busybox
      tag: 1.33.1
    resources:
      limits:
        cpu: "0.2"
        memory: "512Mi"
      requests:
        cpu: "0.1"
        memory: "256Mi"
  auditLogContainer:
    image:
      repository: busybox
      tag: 1.33.1
    resources:
      limits:
        cpu: "0.2"
        memory: "512Mi"
      requests:
        cpu: "0.1"
        memory: "256Mi"
  taskLogContainer:
    image:
      repository: busybox
      tag: 1.33.1
    resources:
      limits:
        cpu: "0.2"
        memory: "512Mi"
      requests:
        cpu: "0.1"
        memory: "256Mi"
ingress:
  # [ingress.host] hostname for providing access to your installation
  # host: "nxrm.example.com"

  # [ingress.tls.secretName] secret name to be utilized by cert-manager when signing
  # tls:
  #   secretName: "nxrm-tls-cert"

  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    # [cert-manager - http01-edit-in-place] - may help with certificate signing challenges
    # acme.cert-manager.io/http01-edit-in-place: 'true'
    # [cert-manager - cluster-issuer] - specifies the issuer to use for targeting a certificate authority
    # cert-manager.io/cluster-issuer: letsencrypt-prod
  dockerIngress: #Ingress for Docker Connector
    enabled: false

storageClass:
  name: managed-csi
  zones:
    zone1: zone1
    zone2: zone2
    zone3: zone3
  iopsPerGB: "10"
pvc:
  accessModes: ReadWriteOnce
  storage: 100Gi

service:  #Nexus Repo NodePort Service
  nexus:
    type: NodePort
    protocol: TCP
    port: 80
    targetPort: 8081
  docker:  #Nodeport Service for Docker Service
    enabled: false
    type: NodePort
    protocol: TCP
    port: 9090
    targetPort: 8081
secret:
  # userAssignedIdentityID: a managed identity or service principal that
  # has secrets management access to the key vault
  userAssignedIdentityID: "userAssignedIdentityID"
  tenantId: "tenantId"
  keyvaultName: keyvaultname
  provider: azure
  license:
    name: nxrm-license.lic
  db:
    user: nxrm-db-user
    password: nxrm-db-password
    host: nxrm-db-host
  adminPassword: nxrm-admin-password

